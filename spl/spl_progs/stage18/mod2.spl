// Memory manager (MOD_2)

alias fnNumber R1; 

if(fnNumber == 1) then

	[SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] + 1;
	
	while([SYSTEM_STATUS_TABLE + 2] == 0) do 
		[PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE + 1] + 4] = WAIT_MEM;
		multipush(R1);
		call MOD_5;
		multipop(R1);
	endwhile;	
	[SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] - 1;
	[SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] - 1;

	alias memFreeIndex R2;

	memFreeIndex = 76;

	while([MEMORY_FREE_LIST + memFreeIndex] == 1 && memFreeIndex <= 127) do

		memFreeIndex = memFreeIndex + 1;
	endwhile;
	[MEMORY_FREE_LIST + memFreeIndex] = 1;

	R0 = memFreeIndex;
	breakpoint;
	return;

endif;

if(fnNumber == 2) then
	alias pageNum R2;
	[MEMORY_FREE_LIST + pageNum] = [MEMORY_FREE_LIST + pageNum] -1;
	if([MEMORY_FREE_LIST + pageNum] == 0) then
		[SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] + 1;
	endif;
	
	alias i R3;
	i = 1;
	while(i < 16) do
		if([PROCESS_TABLE + 16*i + 4] == WAIT_MEM) then 
		if(([PROCESS_TABLE + 16*i + 1]) > 0 && ([PROCESS_TABLE + 16*i + 1] < 16)) then
			[PROCESS_TABLE + 16*i + 4] = READY;	
		endif;
		endif;
	i = i + 1;
	endwhile;
	breakpoint;
	return;
endif;